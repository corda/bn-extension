description 'Corda Business Networks'

cordapp {
    targetPlatformVersion cordaPlatformVersion.toInteger()
    minimumPlatformVersion cordaPlatformVersion.toInteger()
    workflow {
        name "Business Networks Showcase"
        vendor "Corda Open Source"
        versionId 1
        licence "Open Source (Apache 2)"
    }
}

sourceSets {
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/kotlin')
        }
        resources {
            srcDir file('src/integration-test/resources')
        }
    }
}

configurations {
    testArtifacts.extendsFrom testRuntimeClasspath
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    cordaRuntime("$cordaReleaseGroup:corda:$cordaVersion") {
        exclude group: 'co.paralleluniverse', module: 'quasar-core'
    }

    cordapp project(":business-networks-contracts")


    testCompile("$cordaReleaseGroup:corda-core-test-utils:$cordaVersion") {
        exclude group: 'co.paralleluniverse', module: 'quasar-core'
    }
    testCompile("$cordaReleaseGroup:corda-node-driver:$cordaVersion") {
        exclude group: 'co.paralleluniverse', module: 'quasar-core'
    }
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testCompile "com.nhaarman:mockito-kotlin:$mockitoKotlinVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "junit:junit:$junitVersion"
}

test.maxHeapSize = "2g"

task integrationTest(type: Test, dependsOn: []) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    maxHeapSize = "2g"
}
test.maxHeapSize = "2g"